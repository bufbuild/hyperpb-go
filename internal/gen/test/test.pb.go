// Copyright 2020-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        (unknown)
// source: test/test.proto

// buf:lint:ignore PACKAGE_VERSION_SUFFIX
// buf:lint:ignore PACKAGE_DIRECTORY_MATCH

package test

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Scalars struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	A1            int32                  `protobuf:"varint,1,opt,name=a1,proto3" json:"a1,omitempty"`
	A2            int64                  `protobuf:"varint,2,opt,name=a2,proto3" json:"a2,omitempty"`
	A3            uint32                 `protobuf:"varint,3,opt,name=a3,proto3" json:"a3,omitempty"`
	A4            uint64                 `protobuf:"varint,4,opt,name=a4,proto3" json:"a4,omitempty"`
	A5            int32                  `protobuf:"zigzag32,5,opt,name=a5,proto3" json:"a5,omitempty"`
	A6            int64                  `protobuf:"zigzag64,6,opt,name=a6,proto3" json:"a6,omitempty"`
	A7            uint32                 `protobuf:"fixed32,7,opt,name=a7,proto3" json:"a7,omitempty"`
	A8            uint64                 `protobuf:"fixed64,8,opt,name=a8,proto3" json:"a8,omitempty"`
	A9            int32                  `protobuf:"fixed32,9,opt,name=a9,proto3" json:"a9,omitempty"`
	A10           int64                  `protobuf:"fixed64,10,opt,name=a10,proto3" json:"a10,omitempty"`
	A11           float32                `protobuf:"fixed32,11,opt,name=a11,proto3" json:"a11,omitempty"`
	A12           float64                `protobuf:"fixed64,12,opt,name=a12,proto3" json:"a12,omitempty"`
	A13           bool                   `protobuf:"varint,13,opt,name=a13,proto3" json:"a13,omitempty"`
	B1            *int32                 `protobuf:"varint,21,opt,name=b1,proto3,oneof" json:"b1,omitempty"`
	B2            *int64                 `protobuf:"varint,22,opt,name=b2,proto3,oneof" json:"b2,omitempty"`
	B3            *uint32                `protobuf:"varint,23,opt,name=b3,proto3,oneof" json:"b3,omitempty"`
	B4            *uint64                `protobuf:"varint,24,opt,name=b4,proto3,oneof" json:"b4,omitempty"`
	B5            *int32                 `protobuf:"zigzag32,25,opt,name=b5,proto3,oneof" json:"b5,omitempty"`
	B6            *int64                 `protobuf:"zigzag64,26,opt,name=b6,proto3,oneof" json:"b6,omitempty"`
	B7            *uint32                `protobuf:"fixed32,27,opt,name=b7,proto3,oneof" json:"b7,omitempty"`
	B8            *uint64                `protobuf:"fixed64,28,opt,name=b8,proto3,oneof" json:"b8,omitempty"`
	B9            *int32                 `protobuf:"fixed32,29,opt,name=b9,proto3,oneof" json:"b9,omitempty"`
	B10           *int64                 `protobuf:"fixed64,30,opt,name=b10,proto3,oneof" json:"b10,omitempty"`
	B11           *float32               `protobuf:"fixed32,31,opt,name=b11,proto3,oneof" json:"b11,omitempty"`
	B12           *float64               `protobuf:"fixed64,32,opt,name=b12,proto3,oneof" json:"b12,omitempty"`
	B13           *bool                  `protobuf:"varint,33,opt,name=b13,proto3,oneof" json:"b13,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Scalars) Reset() {
	*x = Scalars{}
	mi := &file_test_test_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Scalars) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Scalars) ProtoMessage() {}

func (x *Scalars) ProtoReflect() protoreflect.Message {
	mi := &file_test_test_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Scalars.ProtoReflect.Descriptor instead.
func (*Scalars) Descriptor() ([]byte, []int) {
	return file_test_test_proto_rawDescGZIP(), []int{0}
}

func (x *Scalars) GetA1() int32 {
	if x != nil {
		return x.A1
	}
	return 0
}

func (x *Scalars) GetA2() int64 {
	if x != nil {
		return x.A2
	}
	return 0
}

func (x *Scalars) GetA3() uint32 {
	if x != nil {
		return x.A3
	}
	return 0
}

func (x *Scalars) GetA4() uint64 {
	if x != nil {
		return x.A4
	}
	return 0
}

func (x *Scalars) GetA5() int32 {
	if x != nil {
		return x.A5
	}
	return 0
}

func (x *Scalars) GetA6() int64 {
	if x != nil {
		return x.A6
	}
	return 0
}

func (x *Scalars) GetA7() uint32 {
	if x != nil {
		return x.A7
	}
	return 0
}

func (x *Scalars) GetA8() uint64 {
	if x != nil {
		return x.A8
	}
	return 0
}

func (x *Scalars) GetA9() int32 {
	if x != nil {
		return x.A9
	}
	return 0
}

func (x *Scalars) GetA10() int64 {
	if x != nil {
		return x.A10
	}
	return 0
}

func (x *Scalars) GetA11() float32 {
	if x != nil {
		return x.A11
	}
	return 0
}

func (x *Scalars) GetA12() float64 {
	if x != nil {
		return x.A12
	}
	return 0
}

func (x *Scalars) GetA13() bool {
	if x != nil {
		return x.A13
	}
	return false
}

func (x *Scalars) GetB1() int32 {
	if x != nil && x.B1 != nil {
		return *x.B1
	}
	return 0
}

func (x *Scalars) GetB2() int64 {
	if x != nil && x.B2 != nil {
		return *x.B2
	}
	return 0
}

func (x *Scalars) GetB3() uint32 {
	if x != nil && x.B3 != nil {
		return *x.B3
	}
	return 0
}

func (x *Scalars) GetB4() uint64 {
	if x != nil && x.B4 != nil {
		return *x.B4
	}
	return 0
}

func (x *Scalars) GetB5() int32 {
	if x != nil && x.B5 != nil {
		return *x.B5
	}
	return 0
}

func (x *Scalars) GetB6() int64 {
	if x != nil && x.B6 != nil {
		return *x.B6
	}
	return 0
}

func (x *Scalars) GetB7() uint32 {
	if x != nil && x.B7 != nil {
		return *x.B7
	}
	return 0
}

func (x *Scalars) GetB8() uint64 {
	if x != nil && x.B8 != nil {
		return *x.B8
	}
	return 0
}

func (x *Scalars) GetB9() int32 {
	if x != nil && x.B9 != nil {
		return *x.B9
	}
	return 0
}

func (x *Scalars) GetB10() int64 {
	if x != nil && x.B10 != nil {
		return *x.B10
	}
	return 0
}

func (x *Scalars) GetB11() float32 {
	if x != nil && x.B11 != nil {
		return *x.B11
	}
	return 0
}

func (x *Scalars) GetB12() float64 {
	if x != nil && x.B12 != nil {
		return *x.B12
	}
	return 0
}

func (x *Scalars) GetB13() bool {
	if x != nil && x.B13 != nil {
		return *x.B13
	}
	return false
}

type Repeated struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	R1            []int32                `protobuf:"varint,1,rep,packed,name=r1,proto3" json:"r1,omitempty"`
	R2            []int64                `protobuf:"varint,2,rep,packed,name=r2,proto3" json:"r2,omitempty"`
	R3            []int32                `protobuf:"zigzag32,3,rep,packed,name=r3,proto3" json:"r3,omitempty"`
	R4            []int64                `protobuf:"zigzag64,4,rep,packed,name=r4,proto3" json:"r4,omitempty"`
	R5            []uint32               `protobuf:"fixed32,5,rep,packed,name=r5,proto3" json:"r5,omitempty"`
	R6            []uint64               `protobuf:"fixed64,6,rep,packed,name=r6,proto3" json:"r6,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Repeated) Reset() {
	*x = Repeated{}
	mi := &file_test_test_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Repeated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Repeated) ProtoMessage() {}

func (x *Repeated) ProtoReflect() protoreflect.Message {
	mi := &file_test_test_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Repeated.ProtoReflect.Descriptor instead.
func (*Repeated) Descriptor() ([]byte, []int) {
	return file_test_test_proto_rawDescGZIP(), []int{1}
}

func (x *Repeated) GetR1() []int32 {
	if x != nil {
		return x.R1
	}
	return nil
}

func (x *Repeated) GetR2() []int64 {
	if x != nil {
		return x.R2
	}
	return nil
}

func (x *Repeated) GetR3() []int32 {
	if x != nil {
		return x.R3
	}
	return nil
}

func (x *Repeated) GetR4() []int64 {
	if x != nil {
		return x.R4
	}
	return nil
}

func (x *Repeated) GetR5() []uint32 {
	if x != nil {
		return x.R5
	}
	return nil
}

func (x *Repeated) GetR6() []uint64 {
	if x != nil {
		return x.R6
	}
	return nil
}

type List struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Head          int32                  `protobuf:"varint,1,opt,name=head,proto3" json:"head,omitempty"`
	Tail          *List                  `protobuf:"bytes,2,opt,name=tail,proto3" json:"tail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *List) Reset() {
	*x = List{}
	mi := &file_test_test_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *List) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*List) ProtoMessage() {}

func (x *List) ProtoReflect() protoreflect.Message {
	mi := &file_test_test_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use List.ProtoReflect.Descriptor instead.
func (*List) Descriptor() ([]byte, []int) {
	return file_test_test_proto_rawDescGZIP(), []int{2}
}

func (x *List) GetHead() int32 {
	if x != nil {
		return x.Head
	}
	return 0
}

func (x *List) GetTail() *List {
	if x != nil {
		return x.Tail
	}
	return nil
}

type Tree struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	V             int32                  `protobuf:"varint,1,opt,name=v,proto3" json:"v,omitempty"`
	Ch            []*Tree                `protobuf:"bytes,2,rep,name=ch,proto3" json:"ch,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Tree) Reset() {
	*x = Tree{}
	mi := &file_test_test_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Tree) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tree) ProtoMessage() {}

func (x *Tree) ProtoReflect() protoreflect.Message {
	mi := &file_test_test_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tree.ProtoReflect.Descriptor instead.
func (*Tree) Descriptor() ([]byte, []int) {
	return file_test_test_proto_rawDescGZIP(), []int{3}
}

func (x *Tree) GetV() int32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *Tree) GetCh() []*Tree {
	if x != nil {
		return x.Ch
	}
	return nil
}

type Oneof struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Single:
	//
	//	*Oneof_S1
	Single isOneof_Single `protobuf_oneof:"single"`
	// Types that are valid to be assigned to Multi:
	//
	//	*Oneof_M1
	//	*Oneof_M2
	//	*Oneof_M3
	//	*Oneof_M4
	//	*Oneof_M5
	//	*Oneof_M6
	//	*Oneof_M7
	//	*Oneof_M8
	//	*Oneof_M9
	//	*Oneof_M10
	Multi         isOneof_Multi `protobuf_oneof:"multi"`
	Tail          int32         `protobuf:"varint,30,opt,name=tail,proto3" json:"tail,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Oneof) Reset() {
	*x = Oneof{}
	mi := &file_test_test_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Oneof) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Oneof) ProtoMessage() {}

func (x *Oneof) ProtoReflect() protoreflect.Message {
	mi := &file_test_test_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Oneof.ProtoReflect.Descriptor instead.
func (*Oneof) Descriptor() ([]byte, []int) {
	return file_test_test_proto_rawDescGZIP(), []int{4}
}

func (x *Oneof) GetSingle() isOneof_Single {
	if x != nil {
		return x.Single
	}
	return nil
}

func (x *Oneof) GetS1() int32 {
	if x != nil {
		if x, ok := x.Single.(*Oneof_S1); ok {
			return x.S1
		}
	}
	return 0
}

func (x *Oneof) GetMulti() isOneof_Multi {
	if x != nil {
		return x.Multi
	}
	return nil
}

func (x *Oneof) GetM1() int32 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M1); ok {
			return x.M1
		}
	}
	return 0
}

func (x *Oneof) GetM2() int64 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M2); ok {
			return x.M2
		}
	}
	return 0
}

func (x *Oneof) GetM3() int32 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M3); ok {
			return x.M3
		}
	}
	return 0
}

func (x *Oneof) GetM4() int64 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M4); ok {
			return x.M4
		}
	}
	return 0
}

func (x *Oneof) GetM5() uint32 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M5); ok {
			return x.M5
		}
	}
	return 0
}

func (x *Oneof) GetM6() uint64 {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M6); ok {
			return x.M6
		}
	}
	return 0
}

func (x *Oneof) GetM7() bool {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M7); ok {
			return x.M7
		}
	}
	return false
}

func (x *Oneof) GetM8() string {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M8); ok {
			return x.M8
		}
	}
	return ""
}

func (x *Oneof) GetM9() []byte {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M9); ok {
			return x.M9
		}
	}
	return nil
}

func (x *Oneof) GetM10() *Oneof {
	if x != nil {
		if x, ok := x.Multi.(*Oneof_M10); ok {
			return x.M10
		}
	}
	return nil
}

func (x *Oneof) GetTail() int32 {
	if x != nil {
		return x.Tail
	}
	return 0
}

type isOneof_Single interface {
	isOneof_Single()
}

type Oneof_S1 struct {
	S1 int32 `protobuf:"varint,1,opt,name=s1,proto3,oneof"`
}

func (*Oneof_S1) isOneof_Single() {}

type isOneof_Multi interface {
	isOneof_Multi()
}

type Oneof_M1 struct {
	M1 int32 `protobuf:"varint,11,opt,name=m1,proto3,oneof"`
}

type Oneof_M2 struct {
	M2 int64 `protobuf:"varint,12,opt,name=m2,proto3,oneof"`
}

type Oneof_M3 struct {
	M3 int32 `protobuf:"zigzag32,13,opt,name=m3,proto3,oneof"`
}

type Oneof_M4 struct {
	M4 int64 `protobuf:"zigzag64,14,opt,name=m4,proto3,oneof"`
}

type Oneof_M5 struct {
	M5 uint32 `protobuf:"fixed32,15,opt,name=m5,proto3,oneof"`
}

type Oneof_M6 struct {
	M6 uint64 `protobuf:"fixed64,16,opt,name=m6,proto3,oneof"`
}

type Oneof_M7 struct {
	M7 bool `protobuf:"varint,17,opt,name=m7,proto3,oneof"`
}

type Oneof_M8 struct {
	M8 string `protobuf:"bytes,18,opt,name=m8,proto3,oneof"`
}

type Oneof_M9 struct {
	M9 []byte `protobuf:"bytes,19,opt,name=m9,proto3,oneof"`
}

type Oneof_M10 struct {
	M10 *Oneof `protobuf:"bytes,20,opt,name=m10,proto3,oneof"`
}

func (*Oneof_M1) isOneof_Multi() {}

func (*Oneof_M2) isOneof_Multi() {}

func (*Oneof_M3) isOneof_Multi() {}

func (*Oneof_M4) isOneof_Multi() {}

func (*Oneof_M5) isOneof_Multi() {}

func (*Oneof_M6) isOneof_Multi() {}

func (*Oneof_M7) isOneof_Multi() {}

func (*Oneof_M8) isOneof_Multi() {}

func (*Oneof_M9) isOneof_Multi() {}

func (*Oneof_M10) isOneof_Multi() {}

var File_test_test_proto protoreflect.FileDescriptor

const file_test_test_proto_rawDesc = "" +
	"\n" +
	"\x0ftest/test.proto\x12\vfastpb.test\"\xd9\x04\n" +
	"\aScalars\x12\x0e\n" +
	"\x02a1\x18\x01 \x01(\x05R\x02a1\x12\x0e\n" +
	"\x02a2\x18\x02 \x01(\x03R\x02a2\x12\x0e\n" +
	"\x02a3\x18\x03 \x01(\rR\x02a3\x12\x0e\n" +
	"\x02a4\x18\x04 \x01(\x04R\x02a4\x12\x0e\n" +
	"\x02a5\x18\x05 \x01(\x11R\x02a5\x12\x0e\n" +
	"\x02a6\x18\x06 \x01(\x12R\x02a6\x12\x0e\n" +
	"\x02a7\x18\a \x01(\aR\x02a7\x12\x0e\n" +
	"\x02a8\x18\b \x01(\x06R\x02a8\x12\x0e\n" +
	"\x02a9\x18\t \x01(\x0fR\x02a9\x12\x10\n" +
	"\x03a10\x18\n" +
	" \x01(\x10R\x03a10\x12\x10\n" +
	"\x03a11\x18\v \x01(\x02R\x03a11\x12\x10\n" +
	"\x03a12\x18\f \x01(\x01R\x03a12\x12\x10\n" +
	"\x03a13\x18\r \x01(\bR\x03a13\x12\x13\n" +
	"\x02b1\x18\x15 \x01(\x05H\x00R\x02b1\x88\x01\x01\x12\x13\n" +
	"\x02b2\x18\x16 \x01(\x03H\x01R\x02b2\x88\x01\x01\x12\x13\n" +
	"\x02b3\x18\x17 \x01(\rH\x02R\x02b3\x88\x01\x01\x12\x13\n" +
	"\x02b4\x18\x18 \x01(\x04H\x03R\x02b4\x88\x01\x01\x12\x13\n" +
	"\x02b5\x18\x19 \x01(\x11H\x04R\x02b5\x88\x01\x01\x12\x13\n" +
	"\x02b6\x18\x1a \x01(\x12H\x05R\x02b6\x88\x01\x01\x12\x13\n" +
	"\x02b7\x18\x1b \x01(\aH\x06R\x02b7\x88\x01\x01\x12\x13\n" +
	"\x02b8\x18\x1c \x01(\x06H\aR\x02b8\x88\x01\x01\x12\x13\n" +
	"\x02b9\x18\x1d \x01(\x0fH\bR\x02b9\x88\x01\x01\x12\x15\n" +
	"\x03b10\x18\x1e \x01(\x10H\tR\x03b10\x88\x01\x01\x12\x15\n" +
	"\x03b11\x18\x1f \x01(\x02H\n" +
	"R\x03b11\x88\x01\x01\x12\x15\n" +
	"\x03b12\x18  \x01(\x01H\vR\x03b12\x88\x01\x01\x12\x15\n" +
	"\x03b13\x18! \x01(\bH\fR\x03b13\x88\x01\x01B\x05\n" +
	"\x03_b1B\x05\n" +
	"\x03_b2B\x05\n" +
	"\x03_b3B\x05\n" +
	"\x03_b4B\x05\n" +
	"\x03_b5B\x05\n" +
	"\x03_b6B\x05\n" +
	"\x03_b7B\x05\n" +
	"\x03_b8B\x05\n" +
	"\x03_b9B\x06\n" +
	"\x04_b10B\x06\n" +
	"\x04_b11B\x06\n" +
	"\x04_b12B\x06\n" +
	"\x04_b13\"j\n" +
	"\bRepeated\x12\x0e\n" +
	"\x02r1\x18\x01 \x03(\x05R\x02r1\x12\x0e\n" +
	"\x02r2\x18\x02 \x03(\x03R\x02r2\x12\x0e\n" +
	"\x02r3\x18\x03 \x03(\x11R\x02r3\x12\x0e\n" +
	"\x02r4\x18\x04 \x03(\x12R\x02r4\x12\x0e\n" +
	"\x02r5\x18\x05 \x03(\aR\x02r5\x12\x0e\n" +
	"\x02r6\x18\x06 \x03(\x06R\x02r6\"A\n" +
	"\x04List\x12\x12\n" +
	"\x04head\x18\x01 \x01(\x05R\x04head\x12%\n" +
	"\x04tail\x18\x02 \x01(\v2\x11.fastpb.test.ListR\x04tail\"7\n" +
	"\x04Tree\x12\f\n" +
	"\x01v\x18\x01 \x01(\x05R\x01v\x12!\n" +
	"\x02ch\x18\x02 \x03(\v2\x11.fastpb.test.TreeR\x02ch\"\x8a\x02\n" +
	"\x05Oneof\x12\x10\n" +
	"\x02s1\x18\x01 \x01(\x05H\x00R\x02s1\x12\x10\n" +
	"\x02m1\x18\v \x01(\x05H\x01R\x02m1\x12\x10\n" +
	"\x02m2\x18\f \x01(\x03H\x01R\x02m2\x12\x10\n" +
	"\x02m3\x18\r \x01(\x11H\x01R\x02m3\x12\x10\n" +
	"\x02m4\x18\x0e \x01(\x12H\x01R\x02m4\x12\x10\n" +
	"\x02m5\x18\x0f \x01(\aH\x01R\x02m5\x12\x10\n" +
	"\x02m6\x18\x10 \x01(\x06H\x01R\x02m6\x12\x10\n" +
	"\x02m7\x18\x11 \x01(\bH\x01R\x02m7\x12\x10\n" +
	"\x02m8\x18\x12 \x01(\tH\x01R\x02m8\x12\x10\n" +
	"\x02m9\x18\x13 \x01(\fH\x01R\x02m9\x12&\n" +
	"\x03m10\x18\x14 \x01(\v2\x12.fastpb.test.OneofH\x01R\x03m10\x12\x12\n" +
	"\x04tail\x18\x1e \x01(\x05R\x04tailB\b\n" +
	"\x06singleB\a\n" +
	"\x05multiB\x97\x01\n" +
	"\x0fcom.fastpb.testB\tTestProtoP\x01Z,github.com/bufbuild/fastpb/internal/gen/test\xa2\x02\x03FTX\xaa\x02\vFastpb.Test\xca\x02\vFastpb\\Test\xe2\x02\x17Fastpb\\Test\\GPBMetadata\xea\x02\fFastpb::Testb\x06proto3"

var (
	file_test_test_proto_rawDescOnce sync.Once
	file_test_test_proto_rawDescData []byte
)

func file_test_test_proto_rawDescGZIP() []byte {
	file_test_test_proto_rawDescOnce.Do(func() {
		file_test_test_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_test_test_proto_rawDesc), len(file_test_test_proto_rawDesc)))
	})
	return file_test_test_proto_rawDescData
}

var file_test_test_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_test_test_proto_goTypes = []any{
	(*Scalars)(nil),  // 0: fastpb.test.Scalars
	(*Repeated)(nil), // 1: fastpb.test.Repeated
	(*List)(nil),     // 2: fastpb.test.List
	(*Tree)(nil),     // 3: fastpb.test.Tree
	(*Oneof)(nil),    // 4: fastpb.test.Oneof
}
var file_test_test_proto_depIdxs = []int32{
	2, // 0: fastpb.test.List.tail:type_name -> fastpb.test.List
	3, // 1: fastpb.test.Tree.ch:type_name -> fastpb.test.Tree
	4, // 2: fastpb.test.Oneof.m10:type_name -> fastpb.test.Oneof
	3, // [3:3] is the sub-list for method output_type
	3, // [3:3] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_test_test_proto_init() }
func file_test_test_proto_init() {
	if File_test_test_proto != nil {
		return
	}
	file_test_test_proto_msgTypes[0].OneofWrappers = []any{}
	file_test_test_proto_msgTypes[4].OneofWrappers = []any{
		(*Oneof_S1)(nil),
		(*Oneof_M1)(nil),
		(*Oneof_M2)(nil),
		(*Oneof_M3)(nil),
		(*Oneof_M4)(nil),
		(*Oneof_M5)(nil),
		(*Oneof_M6)(nil),
		(*Oneof_M7)(nil),
		(*Oneof_M8)(nil),
		(*Oneof_M9)(nil),
		(*Oneof_M10)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_test_test_proto_rawDesc), len(file_test_test_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_test_test_proto_goTypes,
		DependencyIndexes: file_test_test_proto_depIdxs,
		MessageInfos:      file_test_test_proto_msgTypes,
	}.Build()
	File_test_test_proto = out.File
	file_test_test_proto_goTypes = nil
	file_test_test_proto_depIdxs = nil
}
