// Copyright 2020-2025 Buf Technologies, Inc.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

package fastpb

// Code generated by internal/stencil. DO NOT EDIT

import ()

//go:nosplit
func parseVarint32(p1 parser1, p2 parser2) (parser1, parser2) {
	_ = parseVarint[uint32]
	var n uint64
	p1, p2, n = p1.varint(p2)
	storeField(p1, p2, uint32(n))

	return p1, p2
}

//go:nosplit
func parseVarint64(p1 parser1, p2 parser2) (parser1, parser2) {
	_ = parseVarint[uint64]
	var n uint64
	p1, p2, n = p1.varint(p2)
	storeField(p1, p2, uint64(n))

	return p1, p2
}

//go:nosplit
func parseZigZag32(p1 parser1, p2 parser2) (parser1, parser2) {
	_ = parseZigZag[uint32]
	var n uint64
	p1, p2, n = p1.varint(p2)
	storeField(p1, p2, zigzag64[uint32](n))

	return p1, p2
}

//go:nosplit
func parseZigZag64(p1 parser1, p2 parser2) (parser1, parser2) {
	_ = parseZigZag[uint64]
	var n uint64
	p1, p2, n = p1.varint(p2)
	storeField(p1, p2, zigzag64[uint64](n))

	return p1, p2
}
